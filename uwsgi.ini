[uwsgi]
# Based on https://www.techatbloomberg.com/blog/configuring-uwsgi-production-deployment/
strict = true
chdir = /code/
#virtualenv = %(base)env
module = project.wsgi:application

master = true
enable-threads = true
single-interpreter = true
die-on-term = true
need-app = true

max-requests = 500                  ; Restart workers after this many requests
max-worker-lifetime = 1800           ; Restart workers after this many seconds
reload-on-rss = 1024                 ; Restart workers after this much resident memory
worker-reload-mercy = 60             ; How long to wait before forcefully killing workers in minutes

cheaper-algo = busyness
processes = 16                      ; Maximum number of workers allowed
cheaper = 2                          ; Minimum number of workers allowed
cheaper-initial = 4                 ; Workers created at startup
cheaper-overload = 1                 ; Length of a cycle in seconds
cheaper-step = 2                    ; How many workers to spawn at a time

cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 2  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 4    ; How many emergegency workers to create if there are too many requests in the queue

#socket = %(base)instance/uwsgi.sock
http = 0.0.0.0:8000

#chown-socket = system:www-data
#chmod-socket = 664

#uid = system
#gid = system

vacuum = true
# harakiri = 300
#plugins = python,logfile
#logger = file:%(base)instance/uwsgi.log
log-master=true

buffer-size=32768

auto-procname = true
# procname-prefix = "prod "  # note the space

